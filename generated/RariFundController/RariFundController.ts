// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CurrencyTrade extends ethereum.Event {
  get params(): CurrencyTrade__Params {
    return new CurrencyTrade__Params(this);
  }
}

export class CurrencyTrade__Params {
  _event: CurrencyTrade;

  constructor(event: CurrencyTrade) {
    this._event = event;
  }

  get inputCurrencyCode(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get outputCurrencyCode(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get inputAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get inputAmountUsd(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get outputAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get outputAmountUsd(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get exchange(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class FundDisabled extends ethereum.Event {
  get params(): FundDisabled__Params {
    return new FundDisabled__Params(this);
  }
}

export class FundDisabled__Params {
  _event: FundDisabled;

  constructor(event: FundDisabled) {
    this._event = event;
  }
}

export class FundEnabled extends ethereum.Event {
  get params(): FundEnabled__Params {
    return new FundEnabled__Params(this);
  }
}

export class FundEnabled__Params {
  _event: FundEnabled;

  constructor(event: FundEnabled) {
    this._event = event;
  }
}

export class FundManagerSet extends ethereum.Event {
  get params(): FundManagerSet__Params {
    return new FundManagerSet__Params(this);
  }
}

export class FundManagerSet__Params {
  _event: FundManagerSet;

  constructor(event: FundManagerSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FundRebalancerSet extends ethereum.Event {
  get params(): FundRebalancerSet__Params {
    return new FundRebalancerSet__Params(this);
  }
}

export class FundRebalancerSet__Params {
  _event: FundRebalancerSet;

  constructor(event: FundRebalancerSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolAllocation extends ethereum.Event {
  get params(): PoolAllocation__Params {
    return new PoolAllocation__Params(this);
  }
}

export class PoolAllocation__Params {
  _event: PoolAllocation;

  constructor(event: PoolAllocation) {
    this._event = event;
  }

  get action(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get pool(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get currencyCode(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RariFundController__getDydxBalancesResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class RariFundController extends ethereum.SmartContract {
  static bind(address: Address): RariFundController {
    return new RariFundController("RariFundController", address);
  }

  IS_RARI_FUND_CONTROLLER(): boolean {
    let result = super.call(
      "IS_RARI_FUND_CONTROLLER",
      "IS_RARI_FUND_CONTROLLER():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_IS_RARI_FUND_CONTROLLER(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "IS_RARI_FUND_CONTROLLER",
      "IS_RARI_FUND_CONTROLLER():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  _getPoolBalance(pool: i32, currencyCode: string): BigInt {
    let result = super.call(
      "_getPoolBalance",
      "_getPoolBalance(uint8,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );

    return result[0].toBigInt();
  }

  try__getPoolBalance(
    pool: i32,
    currencyCode: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_getPoolBalance",
      "_getPoolBalance(uint8,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkPoolForFunds(pool: i32, currencyCode: string): boolean {
    let result = super.call(
      "checkPoolForFunds",
      "checkPoolForFunds(uint8,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkPoolForFunds(
    pool: i32,
    currencyCode: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkPoolForFunds",
      "checkPoolForFunds(uint8,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fundDisabled(): boolean {
    let result = super.call("fundDisabled", "fundDisabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_fundDisabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall("fundDisabled", "fundDisabled():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getDydxBalances(): RariFundController__getDydxBalancesResult {
    let result = super.call(
      "getDydxBalances",
      "getDydxBalances():(address[],uint256[])",
      []
    );

    return new RariFundController__getDydxBalancesResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_getDydxBalances(): ethereum.CallResult<
    RariFundController__getDydxBalancesResult
  > {
    let result = super.tryCall(
      "getDydxBalances",
      "getDydxBalances():(address[],uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RariFundController__getDydxBalancesResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  getPoolBalance(pool: i32, currencyCode: string): BigInt {
    let result = super.call(
      "getPoolBalance",
      "getPoolBalance(uint8,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPoolBalance(
    pool: i32,
    currencyCode: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPoolBalance",
      "getPoolBalance(uint8,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPoolsByCurrency(currencyCode: string): Array<i32> {
    let result = super.call(
      "getPoolsByCurrency",
      "getPoolsByCurrency(string):(uint8[])",
      [ethereum.Value.fromString(currencyCode)]
    );

    return result[0].toI32Array();
  }

  try_getPoolsByCurrency(
    currencyCode: string
  ): ethereum.CallResult<Array<i32>> {
    let result = super.tryCall(
      "getPoolsByCurrency",
      "getPoolsByCurrency(string):(uint8[])",
      [ethereum.Value.fromString(currencyCode)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32Array());
  }

  hasCurrencyInPool(pool: i32, currencyCode: string): boolean {
    let result = super.call(
      "hasCurrencyInPool",
      "hasCurrencyInPool(uint8,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasCurrencyInPool(
    pool: i32,
    currencyCode: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasCurrencyInPool",
      "hasCurrencyInPool(uint8,string):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(pool)),
        ethereum.Value.fromString(currencyCode)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rariFundManager(): Address {
    let result = super.call(
      "rariFundManager",
      "rariFundManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_rariFundManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "rariFundManager",
      "rariFundManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  upgradeFundController(newContract: Address, erc20Contract: Address): boolean {
    let result = super.call(
      "upgradeFundController",
      "upgradeFundController(address,address):(bool)",
      [
        ethereum.Value.fromAddress(newContract),
        ethereum.Value.fromAddress(erc20Contract)
      ]
    );

    return result[0].toBoolean();
  }

  try_upgradeFundController(
    newContract: Address,
    erc20Contract: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "upgradeFundController",
      "upgradeFundController(address,address):(bool)",
      [
        ethereum.Value.fromAddress(newContract),
        ethereum.Value.fromAddress(erc20Contract)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class _getPoolBalanceCall extends ethereum.Call {
  get inputs(): _getPoolBalanceCall__Inputs {
    return new _getPoolBalanceCall__Inputs(this);
  }

  get outputs(): _getPoolBalanceCall__Outputs {
    return new _getPoolBalanceCall__Outputs(this);
  }
}

export class _getPoolBalanceCall__Inputs {
  _call: _getPoolBalanceCall;

  constructor(call: _getPoolBalanceCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class _getPoolBalanceCall__Outputs {
  _call: _getPoolBalanceCall;

  constructor(call: _getPoolBalanceCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ApproveTo0xCall extends ethereum.Call {
  get inputs(): ApproveTo0xCall__Inputs {
    return new ApproveTo0xCall__Inputs(this);
  }

  get outputs(): ApproveTo0xCall__Outputs {
    return new ApproveTo0xCall__Outputs(this);
  }
}

export class ApproveTo0xCall__Inputs {
  _call: ApproveTo0xCall;

  constructor(call: ApproveTo0xCall) {
    this._call = call;
  }

  get erc20Contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveTo0xCall__Outputs {
  _call: ApproveTo0xCall;

  constructor(call: ApproveTo0xCall) {
    this._call = call;
  }
}

export class ApproveToMUsdCall extends ethereum.Call {
  get inputs(): ApproveToMUsdCall__Inputs {
    return new ApproveToMUsdCall__Inputs(this);
  }

  get outputs(): ApproveToMUsdCall__Outputs {
    return new ApproveToMUsdCall__Outputs(this);
  }
}

export class ApproveToMUsdCall__Inputs {
  _call: ApproveToMUsdCall;

  constructor(call: ApproveToMUsdCall) {
    this._call = call;
  }

  get currencyCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveToMUsdCall__Outputs {
  _call: ApproveToMUsdCall;

  constructor(call: ApproveToMUsdCall) {
    this._call = call;
  }
}

export class ApproveToPoolCall extends ethereum.Call {
  get inputs(): ApproveToPoolCall__Inputs {
    return new ApproveToPoolCall__Inputs(this);
  }

  get outputs(): ApproveToPoolCall__Outputs {
    return new ApproveToPoolCall__Outputs(this);
  }
}

export class ApproveToPoolCall__Inputs {
  _call: ApproveToPoolCall;

  constructor(call: ApproveToPoolCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ApproveToPoolCall__Outputs {
  _call: ApproveToPoolCall;

  constructor(call: ApproveToPoolCall) {
    this._call = call;
  }
}

export class CheckPoolForFundsCall extends ethereum.Call {
  get inputs(): CheckPoolForFundsCall__Inputs {
    return new CheckPoolForFundsCall__Inputs(this);
  }

  get outputs(): CheckPoolForFundsCall__Outputs {
    return new CheckPoolForFundsCall__Outputs(this);
  }
}

export class CheckPoolForFundsCall__Inputs {
  _call: CheckPoolForFundsCall;

  constructor(call: CheckPoolForFundsCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CheckPoolForFundsCall__Outputs {
  _call: CheckPoolForFundsCall;

  constructor(call: CheckPoolForFundsCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimMStableRewardsCall extends ethereum.Call {
  get inputs(): ClaimMStableRewardsCall__Inputs {
    return new ClaimMStableRewardsCall__Inputs(this);
  }

  get outputs(): ClaimMStableRewardsCall__Outputs {
    return new ClaimMStableRewardsCall__Outputs(this);
  }
}

export class ClaimMStableRewardsCall__Inputs {
  _call: ClaimMStableRewardsCall;

  constructor(call: ClaimMStableRewardsCall) {
    this._call = call;
  }

  get all(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get first(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get last(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimMStableRewardsCall__Outputs {
  _call: ClaimMStableRewardsCall;

  constructor(call: ClaimMStableRewardsCall) {
    this._call = call;
  }
}

export class DepositToPoolCall extends ethereum.Call {
  get inputs(): DepositToPoolCall__Inputs {
    return new DepositToPoolCall__Inputs(this);
  }

  get outputs(): DepositToPoolCall__Outputs {
    return new DepositToPoolCall__Outputs(this);
  }
}

export class DepositToPoolCall__Inputs {
  _call: DepositToPoolCall;

  constructor(call: DepositToPoolCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositToPoolCall__Outputs {
  _call: DepositToPoolCall;

  constructor(call: DepositToPoolCall) {
    this._call = call;
  }
}

export class GetPoolBalanceCall extends ethereum.Call {
  get inputs(): GetPoolBalanceCall__Inputs {
    return new GetPoolBalanceCall__Inputs(this);
  }

  get outputs(): GetPoolBalanceCall__Outputs {
    return new GetPoolBalanceCall__Outputs(this);
  }
}

export class GetPoolBalanceCall__Inputs {
  _call: GetPoolBalanceCall;

  constructor(call: GetPoolBalanceCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class GetPoolBalanceCall__Outputs {
  _call: GetPoolBalanceCall;

  constructor(call: GetPoolBalanceCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MarketSell0xOrdersFillOrKillCall extends ethereum.Call {
  get inputs(): MarketSell0xOrdersFillOrKillCall__Inputs {
    return new MarketSell0xOrdersFillOrKillCall__Inputs(this);
  }

  get outputs(): MarketSell0xOrdersFillOrKillCall__Outputs {
    return new MarketSell0xOrdersFillOrKillCall__Outputs(this);
  }
}

export class MarketSell0xOrdersFillOrKillCall__Inputs {
  _call: MarketSell0xOrdersFillOrKillCall;

  constructor(call: MarketSell0xOrdersFillOrKillCall) {
    this._call = call;
  }

  get inputCurrencyCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get outputCurrencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get orders(): Array<MarketSell0xOrdersFillOrKillCallOrdersStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      MarketSell0xOrdersFillOrKillCallOrdersStruct
    >();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get takerAssetFillAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class MarketSell0xOrdersFillOrKillCall__Outputs {
  _call: MarketSell0xOrdersFillOrKillCall;

  constructor(call: MarketSell0xOrdersFillOrKillCall) {
    this._call = call;
  }
}

export class MarketSell0xOrdersFillOrKillCallOrdersStruct extends ethereum.Tuple {
  get makerAddress(): Address {
    return this[0].toAddress();
  }

  get takerAddress(): Address {
    return this[1].toAddress();
  }

  get feeRecipientAddress(): Address {
    return this[2].toAddress();
  }

  get senderAddress(): Address {
    return this[3].toAddress();
  }

  get makerAssetAmount(): BigInt {
    return this[4].toBigInt();
  }

  get takerAssetAmount(): BigInt {
    return this[5].toBigInt();
  }

  get makerFee(): BigInt {
    return this[6].toBigInt();
  }

  get takerFee(): BigInt {
    return this[7].toBigInt();
  }

  get expirationTimeSeconds(): BigInt {
    return this[8].toBigInt();
  }

  get salt(): BigInt {
    return this[9].toBigInt();
  }

  get makerAssetData(): Bytes {
    return this[10].toBytes();
  }

  get takerAssetData(): Bytes {
    return this[11].toBytes();
  }

  get makerFeeAssetData(): Bytes {
    return this[12].toBytes();
  }

  get takerFeeAssetData(): Bytes {
    return this[13].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAaveReferralCodeCall extends ethereum.Call {
  get inputs(): SetAaveReferralCodeCall__Inputs {
    return new SetAaveReferralCodeCall__Inputs(this);
  }

  get outputs(): SetAaveReferralCodeCall__Outputs {
    return new SetAaveReferralCodeCall__Outputs(this);
  }
}

export class SetAaveReferralCodeCall__Inputs {
  _call: SetAaveReferralCodeCall;

  constructor(call: SetAaveReferralCodeCall) {
    this._call = call;
  }

  get referralCode(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetAaveReferralCodeCall__Outputs {
  _call: SetAaveReferralCodeCall;

  constructor(call: SetAaveReferralCodeCall) {
    this._call = call;
  }
}

export class SetDailyLossRateLimitCall extends ethereum.Call {
  get inputs(): SetDailyLossRateLimitCall__Inputs {
    return new SetDailyLossRateLimitCall__Inputs(this);
  }

  get outputs(): SetDailyLossRateLimitCall__Outputs {
    return new SetDailyLossRateLimitCall__Outputs(this);
  }
}

export class SetDailyLossRateLimitCall__Inputs {
  _call: SetDailyLossRateLimitCall;

  constructor(call: SetDailyLossRateLimitCall) {
    this._call = call;
  }

  get limit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDailyLossRateLimitCall__Outputs {
  _call: SetDailyLossRateLimitCall;

  constructor(call: SetDailyLossRateLimitCall) {
    this._call = call;
  }
}

export class SetFundDisabledCall extends ethereum.Call {
  get inputs(): SetFundDisabledCall__Inputs {
    return new SetFundDisabledCall__Inputs(this);
  }

  get outputs(): SetFundDisabledCall__Outputs {
    return new SetFundDisabledCall__Outputs(this);
  }
}

export class SetFundDisabledCall__Inputs {
  _call: SetFundDisabledCall;

  constructor(call: SetFundDisabledCall) {
    this._call = call;
  }

  get disabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFundDisabledCall__Outputs {
  _call: SetFundDisabledCall;

  constructor(call: SetFundDisabledCall) {
    this._call = call;
  }
}

export class SetFundManagerCall extends ethereum.Call {
  get inputs(): SetFundManagerCall__Inputs {
    return new SetFundManagerCall__Inputs(this);
  }

  get outputs(): SetFundManagerCall__Outputs {
    return new SetFundManagerCall__Outputs(this);
  }
}

export class SetFundManagerCall__Inputs {
  _call: SetFundManagerCall;

  constructor(call: SetFundManagerCall) {
    this._call = call;
  }

  get newContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFundManagerCall__Outputs {
  _call: SetFundManagerCall;

  constructor(call: SetFundManagerCall) {
    this._call = call;
  }
}

export class SetFundRebalancerCall extends ethereum.Call {
  get inputs(): SetFundRebalancerCall__Inputs {
    return new SetFundRebalancerCall__Inputs(this);
  }

  get outputs(): SetFundRebalancerCall__Outputs {
    return new SetFundRebalancerCall__Outputs(this);
  }
}

export class SetFundRebalancerCall__Inputs {
  _call: SetFundRebalancerCall;

  constructor(call: SetFundRebalancerCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFundRebalancerCall__Outputs {
  _call: SetFundRebalancerCall;

  constructor(call: SetFundRebalancerCall) {
    this._call = call;
  }
}

export class SwapMStableCall extends ethereum.Call {
  get inputs(): SwapMStableCall__Inputs {
    return new SwapMStableCall__Inputs(this);
  }

  get outputs(): SwapMStableCall__Outputs {
    return new SwapMStableCall__Outputs(this);
  }
}

export class SwapMStableCall__Inputs {
  _call: SwapMStableCall;

  constructor(call: SwapMStableCall) {
    this._call = call;
  }

  get inputCurrencyCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get outputCurrencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get inputAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SwapMStableCall__Outputs {
  _call: SwapMStableCall;

  constructor(call: SwapMStableCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeFundControllerCall extends ethereum.Call {
  get inputs(): UpgradeFundControllerCall__Inputs {
    return new UpgradeFundControllerCall__Inputs(this);
  }

  get outputs(): UpgradeFundControllerCall__Outputs {
    return new UpgradeFundControllerCall__Outputs(this);
  }
}

export class UpgradeFundControllerCall__Inputs {
  _call: UpgradeFundControllerCall;

  constructor(call: UpgradeFundControllerCall) {
    this._call = call;
  }

  get newContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeFundControllerCall__Outputs {
  _call: UpgradeFundControllerCall;

  constructor(call: UpgradeFundControllerCall) {
    this._call = call;
  }
}

export class UpgradeFundController1Call extends ethereum.Call {
  get inputs(): UpgradeFundController1Call__Inputs {
    return new UpgradeFundController1Call__Inputs(this);
  }

  get outputs(): UpgradeFundController1Call__Outputs {
    return new UpgradeFundController1Call__Outputs(this);
  }
}

export class UpgradeFundController1Call__Inputs {
  _call: UpgradeFundController1Call;

  constructor(call: UpgradeFundController1Call) {
    this._call = call;
  }

  get newContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get erc20Contract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpgradeFundController1Call__Outputs {
  _call: UpgradeFundController1Call;

  constructor(call: UpgradeFundController1Call) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawAllFromPoolCall extends ethereum.Call {
  get inputs(): WithdrawAllFromPoolCall__Inputs {
    return new WithdrawAllFromPoolCall__Inputs(this);
  }

  get outputs(): WithdrawAllFromPoolCall__Outputs {
    return new WithdrawAllFromPoolCall__Outputs(this);
  }
}

export class WithdrawAllFromPoolCall__Inputs {
  _call: WithdrawAllFromPoolCall;

  constructor(call: WithdrawAllFromPoolCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class WithdrawAllFromPoolCall__Outputs {
  _call: WithdrawAllFromPoolCall;

  constructor(call: WithdrawAllFromPoolCall) {
    this._call = call;
  }
}

export class WithdrawAllFromPoolOnUpgradeCall extends ethereum.Call {
  get inputs(): WithdrawAllFromPoolOnUpgradeCall__Inputs {
    return new WithdrawAllFromPoolOnUpgradeCall__Inputs(this);
  }

  get outputs(): WithdrawAllFromPoolOnUpgradeCall__Outputs {
    return new WithdrawAllFromPoolOnUpgradeCall__Outputs(this);
  }
}

export class WithdrawAllFromPoolOnUpgradeCall__Inputs {
  _call: WithdrawAllFromPoolOnUpgradeCall;

  constructor(call: WithdrawAllFromPoolOnUpgradeCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class WithdrawAllFromPoolOnUpgradeCall__Outputs {
  _call: WithdrawAllFromPoolOnUpgradeCall;

  constructor(call: WithdrawAllFromPoolOnUpgradeCall) {
    this._call = call;
  }
}

export class WithdrawFromPoolCall extends ethereum.Call {
  get inputs(): WithdrawFromPoolCall__Inputs {
    return new WithdrawFromPoolCall__Inputs(this);
  }

  get outputs(): WithdrawFromPoolCall__Outputs {
    return new WithdrawFromPoolCall__Outputs(this);
  }
}

export class WithdrawFromPoolCall__Inputs {
  _call: WithdrawFromPoolCall;

  constructor(call: WithdrawFromPoolCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawFromPoolCall__Outputs {
  _call: WithdrawFromPoolCall;

  constructor(call: WithdrawFromPoolCall) {
    this._call = call;
  }
}

export class WithdrawFromPoolOptimizedCall extends ethereum.Call {
  get inputs(): WithdrawFromPoolOptimizedCall__Inputs {
    return new WithdrawFromPoolOptimizedCall__Inputs(this);
  }

  get outputs(): WithdrawFromPoolOptimizedCall__Outputs {
    return new WithdrawFromPoolOptimizedCall__Outputs(this);
  }
}

export class WithdrawFromPoolOptimizedCall__Inputs {
  _call: WithdrawFromPoolOptimizedCall;

  constructor(call: WithdrawFromPoolOptimizedCall) {
    this._call = call;
  }

  get pool(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get currencyCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get all(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class WithdrawFromPoolOptimizedCall__Outputs {
  _call: WithdrawFromPoolOptimizedCall;

  constructor(call: WithdrawFromPoolOptimizedCall) {
    this._call = call;
  }
}
